from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, WebAppInfo
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.enums.parse_mode import ParseMode
from aiogram.utils.keyboard import ReplyKeyboardBuilder
import logging
from create_bot import bot, Admin, Chat
from database import data_base as db
from keaboards import client_kb
from datetime import datetime
from aiogram.types import FSInputFile
import os


router_client = Router()

logging.basicConfig(level=logging.INFO)


class Wait(StatesGroup):
    choosing_help = State()


now = datetime.now()


async def register_user(message):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    user_id = message.from_user.id
    is_bot = message.from_user.is_bot
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    username = message.from_user.username
    language_code = message.from_user.language_code
    db.cursor.execute(
        'INSERT INTO user (id, is_bot, first_name, last_name, username, language_code) VALUES (?, ?, ?, ?, ?, ?)',
        (user_id, is_bot, first_name, last_name, username, language_code)
    )
    db.conn.commit()


async def send_welcome_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    text = "–í–æ—Ç –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏!\n\n1) /shop - –ú–∞–≥–∞–∑–∏–Ω –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n\n2) /help - –ü–æ–º–æ—â—å –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤"
    await bot.send_message(chat_id=chat_id, text=text, reply_markup=client_kb.kb_vibor_client_start)


@router_client.message(Command(commands=['start']))
async def start_help_command(message: types.Message):
    user_id = message.from_user.id
    logging.info(f'User {user_id} started the bot at {now}')

    if message.from_user.id in Admin.admin_list:
        webAppInfo = types.WebAppInfo(url="https://dx78.ru/bot_lira/admin_lira/")
        builder = ReplyKeyboardBuilder()
        builder.add(types.KeyboardButton(text='–°–∞–π—Ç', web_app=webAppInfo))
        keyboard_markup = builder.as_markup(resize_keyboard=True)
        await bot.send_message(chat_id=user_id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –°–µ—Ä–≥–µ–π\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=keyboard_markup)
        return
    db.cursor.execute('SELECT COUNT(*) FROM user WHERE id = ?', (user_id,))
    db.conn.commit()
    user_count = db.cursor.fetchone()[0]

    if user_count == 0:
        await register_user(message)
        await bot.send_message(
            chat_id=user_id,
            text="–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –≤–æ—Ç –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n\n1) /shop - –ú–∞–≥–∞–∑–∏–Ω –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n\n2) /help - –ü–æ–º–æ—â—å –≤ —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤",
            reply_markup=client_kb.kb_vibor_client_start
        )
    else:
        await send_welcome_message(user_id)


@router_client.message(Command(commands=['help']))
async def help_command(message: types.Message):
    user_id = message.from_user.id
    logging.info(f'User {user_id} - {message.from_user.first_name} started the bot at {now}')

    if message.from_user.id in Admin.admin_list:
        webAppInfo = types.WebAppInfo(url="https://dx78.ru/bot_lira/admin_lira/")
        builder = ReplyKeyboardBuilder()
        builder.add(types.KeyboardButton(text='–°–∞–π—Ç', web_app=webAppInfo))
        keyboard_markup = builder.as_markup(resize_keyboard=True)
        await bot.send_message(chat_id=user_id, text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –°–µ—Ä–≥–µ–π\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É',
                               reply_markup=keyboard_markup)
        return

    db.cursor.execute('SELECT COUNT(*) FROM user WHERE id = ?', (user_id,))
    db.conn.commit()
    user_count = db.cursor.fetchone()[0]

    if user_count == 0:
        await register_user(message)
        await bot.send_message(chat_id=user_id, text="–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                               reply_markup=client_kb.kb_vibor_client_start)
    else:
        await bot.send_message(chat_id=user_id, text="–ü–µ—Ä–µ–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                               reply_markup=client_kb.kb_vibor_client_help)


@router_client.message(Command(commands=['shop']))
async def shop_command(message: types.Message):
    user_id = message.from_user.id
    await message.delete()

    webAppInfo = types.WebAppInfo(url="https://dx78.ru/bot_lira/")
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text='–°–∞–π—Ç', web_app=webAppInfo))

    await bot.send_message(chat_id=user_id, text='–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=builder.as_markup())


@router_client.message(F.text == '–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∏')
async def chat_command(message: types.Message, state: FSMContext):
    await state.set_state(Wait.choosing_help)
    user_id = message.from_user.id
    builder = ReplyKeyboardBuilder()
    builder.add(
        types.KeyboardButton(text='–í—ã–π—Ç–∏', resize_keyboard=True, input_field_placeholder='–í—ã–±–∏—Ä–∞–π –∏–∑ –ø—Ä–µ–ª–æ–∂–µ–Ω–Ω—ã—Ö',
                             selective=True))
    await bot.send_message(chat_id=user_id, text="–ù–∞–ø–∏—à–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å", reply_markup=builder.as_markup())


@router_client.message(Wait.choosing_help, F.text == '–í—ã–π—Ç–∏')
async def form_help_exit(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    await state.clear()
    await bot.send_message(chat_id=user_id, text="–î–æ –≤—Å—Ç—Ä–µ—á—å", reply_markup=client_kb.kb_vibor_client_start)


async def send_question_to_admin(user_id, user_text, user_name, user_lastname, username, formatted_date_time, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    if username is None:
        await bot.forward_message(chat_id=Admin.Leonid, from_chat_id=user_id, message_id=message.message_id)
        await bot.forward_message(chat_id=Admin.Serei, from_chat_id=user_id, message_id=message.message_id)
        await bot.send_message(chat_id=Admin.Leonid,
                               text=f'<b>–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n{user_id} - ID –û–±—Ä–æ—Ç–∏–≤—à–∏–≥–æ—Å—è\n\n{user_text} - –í–æ–ø—Ä–æ—Å –ö–ª–∏–µ–Ω—Ç–∞\n\n{user_name} - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{user_lastname} - 2-–æ–µ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{formatted_date_time} –í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è',
                               parse_mode=ParseMode.HTML)
        await bot.send_message(chat_id=Admin.Serei,
                               text=f'<b>–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n{user_id} - ID –û–±—Ä–æ—Ç–∏–≤—à–∏–≥–æ—Å—è\n\n{user_text} - –í–æ–ø—Ä–æ—Å –ö–ª–∏–µ–Ω—Ç–∞\n\n{user_name} - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{user_lastname} - 2-–æ–µ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{formatted_date_time} –í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è',
                               parse_mode=ParseMode.HTML)
    else:
        await bot.send_message(chat_id=Admin.Leonid,
                               text=f'<b>–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n{user_id} - ID –û–±—Ä–æ—Ç–∏–≤—à–∏–≥–æ—Å—è\n\n{user_text} - –í–æ–ø—Ä–æ—Å –ö–ª–∏–µ–Ω—Ç–∞\n\n{user_name} - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{user_lastname} - 2-–æ–µ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n@{username}- —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞\n\n{formatted_date_time} –í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è',
                               parse_mode=ParseMode.HTML)
        await bot.send_message(chat_id=Admin.Serei,
                               text=f'<b>–ß–∞—Ç-–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>\n\n{user_id} - ID –û–±—Ä–æ—Ç–∏–≤—à–∏–≥–æ—Å—è\n\n{user_text} - –í–æ–ø—Ä–æ—Å –ö–ª–∏–µ–Ω—Ç–∞\n\n{user_name} - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{user_lastname} - 2-–æ–µ –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞\n\n{formatted_date_time} –í—Ä–µ–º—è –æ–±—Ä–∞—â–µ–Ω–∏—è',
                               parse_mode=ParseMode.HTML)

@router_client.message(Wait.choosing_help)
async def form_help(message: types.Message, state: FSMContext):
    now = datetime.now()
    user_id = message.from_user.id
    user_text = message.text
    user_name = message.from_user.first_name
    user_lastname = message.from_user.last_name
    username = message.from_user.username
    formatted_date_time = now.strftime("%Y-%m-%d %H:%M:%S")
    await state.clear()

    if now.weekday() < 5 and now.time() >= datetime.strptime("18:30", "%H:%M").time():
        await bot.send_message(chat_id=user_id,
                               text="–í–Ω–∏–º–∞–Ω–∏–µ! –í —Å–≤—è–∑–∏ —Å —Ç–µ–º, —á—Ç–æ —Å–µ–π—á–∞—Å –Ω–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –¥–∞–Ω —É—Ç—Ä–æ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è.")
    else:
        await bot.send_message(chat_id=user_id, text="–ú—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç—è—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                               reply_markup=types.ReplyKeyboardRemove())

    await send_question_to_admin(user_id, user_text, user_name, user_lastname, username, formatted_date_time, message)


@router_client.message(F.new_chat_members)
async def welcome_new_member(message: Message):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –≥—Ä—É–ø–ø–µ –æ—Ç –ª–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏ ¬´–†–∞–¥–∏–æ—Å–≤—è–∑—å –°–ü–±¬ª!\n\n"
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ - –°–µ—Ä–≥–µ–π - @DX78RU\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ—Å—å –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º\n"
        "üìç –ù–∞—à –∞–¥—Ä–µ—Å:\n"
        "–ß—É–≥—É–Ω–Ω–∞—è —É–ª., –¥–æ–º 40, –û—Ñ–∏—Å 416, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, 195044\n\n"
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ:\n"
        " ‚Ä¢ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (921) 935-24-92\n"
        " ‚Ä¢ –ø–æ –ø–æ—á—Ç–µ: cb78@mail.ru\n"
        " ‚Ä¢ –∞ —Ç–∞–∫–∂–µ –ø—Ä—è–º–æ –∑–¥–µ—Å—å, –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º!\n\n"
        "ü§ì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å, –∏ –º—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º."
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
        [InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="help")]
    ])
    BOT_LINK = 'https://t.me/radiolira_bot'
    for new_member in message.new_chat_members:
        try:
            photo = FSInputFile('photo/logo.png')
            await bot.send_photo(
                chat_id=new_member.id,
                photo=photo,
                caption=text,
            )
            await bot.send_location(
                chat_id=new_member.id,
                latitude=59.970992,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                longitude=30.364126,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            )
    
            await bot.send_message(new_member.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø—É! –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.",
                                   reply_markup=keyboard)
        except Exception:    
            await bot.send_message(
                chat_id=Admin.Serei,
                text=(
                    f"C–µ—Ä–≥–µ–π! –ü–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_member.full_name} –≤ –≥—Ä—É–ø–ø–µ, –∏ –º–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ."))
            await bot.send_message(
                chat_id=Admin.Leonid,
                text=(
                    f"C–µ—Ä–≥–µ–π! –ü–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_member.full_name} –≤ –≥—Ä—É–ø–ø–µ, –∏ –º–Ω–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ."))


@router_client.callback_query(F.data == 'shop')
async def shop_handler(callback: CallbackQuery):
    user_id = callback.from_user.id
    await callback.message.delete()

    webAppInfo = types.WebAppInfo(url="https://dx78.ru/bot_lira/")
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text='–°–∞–π—Ç', web_app=webAppInfo))

    await bot.send_message(chat_id=user_id, text='–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=builder.as_markup())
    await callback.answer()


@router_client.callback_query(F.data == 'help')
async def help_handler(callback: CallbackQuery):
    user_id = callback.from_user.id

    db.cursor.execute('SELECT COUNT(*) FROM user WHERE id = ?', (user_id,))
    db.conn.commit()
    user_count = db.cursor.fetchone()[0]

    if user_count == 0:
        register_user(callback.from_user)
        await bot.send_message(chat_id=user_id, text="–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                               reply_markup=client_kb.kb_vibor_client_start)
    else:
        await bot.send_message(chat_id=user_id, text="–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
                               reply_markup=client_kb.kb_vibor_client_help)
    await callback.answer()

@router_client.message(Command(commands=['info']))
async def send_info(message: types.Message):
    user_id = message.from_user.id
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ "–†–∞–¥–∏–æ—Å–≤—è–∑—å –°–ü–±"."""

    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –≥—Ä—É–ø–ø–µ –æ—Ç –ª–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏ ¬´–†–∞–¥–∏–æ—Å–≤—è–∑—å –°–ü–±¬ª!\n\n"
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ - –°–µ—Ä–≥–µ–π - @DX78RU\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ—Å—å –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º\n"
        "üìç –ù–∞—à –∞–¥—Ä–µ—Å:\n"
        "–ß—É–≥—É–Ω–Ω–∞—è —É–ª., –¥–æ–º 40, –û—Ñ–∏—Å 416, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, 195044\n\n"
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ:\n"
        " ‚Ä¢ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +7 (921) 935-24-92\n"
        " ‚Ä¢ –ø–æ –ø–æ—á—Ç–µ: cb78@mail.ru\n"
        " ‚Ä¢ –∞ —Ç–∞–∫–∂–µ –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ —á–∞—Ç —Å –±–æ—Ç–æ–º!\n\n"
        "ü§ì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å, –∏ –º—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º."
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–∞—Ä—Ç–æ–π
    try:
        photo = FSInputFile('photo/logo.png')
        await bot.send_photo(
            chat_id=user_id,
            photo=photo,
            caption=text,
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    await bot.send_location(
        chat_id=user_id,
        latitude=59.970992,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        longitude=30.364126,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    )
    
